const n=JSON.parse('{"key":"v-52cd8b11","path":"/vue/hooks/use-request.html","title":"use-request","lang":"zh-CN","frontmatter":{"title":"use-request","category":["js"],"tag":["hooks"],"description":"介绍 use-request 是一个用于处理 HTTP 请求的 Vue 组合式 API。它提供了一种简洁的方式来发起请求、处理响应和错误，并且可以与 Vue 的响应式系统无缝集成。 代码 import { ref } from \\"vue\\"; import request from \\"@/utils/request\\"; export const queryData = async ({ url, method = \\"post\\", data = {}, params = {}, }) =&gt; { return await request[method](url, data, params); }; export const useReuqest = (formatResult) =&gt; { const page = ref({ pageNo: 1, pageSize: 10, total: 0, }); const dataSource = ref([]); const loading = ref(false); page.value = { pageNo: 1, pageSize: 10, total: 0, }; dataSource.value = []; return { loading: loading, dataSource, page, run: async (filter) =&gt; { try { let filterData = filter; if (filter.pages) { page.value.pageNo = filter.pages.current; page.value.pageSize = filter.pages.pageSize; page.value.total = filter.pages.total; filterData = { ...filter, ...page.value }; } loading.value = true; const { httpCode, data } = await queryData(filterData); if (httpCode === 200) { dataSource.value = formatResult ? formatResult(data) : data; } } catch (error) { dataSource.value = []; } finally { loading.value = false; } }, }; };","head":[["meta",{"property":"og:url","content":"https://soft-winds.github.io/vue/hooks/use-request.html"}],["meta",{"property":"og:site_name","content":"七月的星期七"}],["meta",{"property":"og:title","content":"use-request"}],["meta",{"property":"og:description","content":"介绍 use-request 是一个用于处理 HTTP 请求的 Vue 组合式 API。它提供了一种简洁的方式来发起请求、处理响应和错误，并且可以与 Vue 的响应式系统无缝集成。 代码 import { ref } from \\"vue\\"; import request from \\"@/utils/request\\"; export const queryData = async ({ url, method = \\"post\\", data = {}, params = {}, }) =&gt; { return await request[method](url, data, params); }; export const useReuqest = (formatResult) =&gt; { const page = ref({ pageNo: 1, pageSize: 10, total: 0, }); const dataSource = ref([]); const loading = ref(false); page.value = { pageNo: 1, pageSize: 10, total: 0, }; dataSource.value = []; return { loading: loading, dataSource, page, run: async (filter) =&gt; { try { let filterData = filter; if (filter.pages) { page.value.pageNo = filter.pages.current; page.value.pageSize = filter.pages.pageSize; page.value.total = filter.pages.total; filterData = { ...filter, ...page.value }; } loading.value = true; const { httpCode, data } = await queryData(filterData); if (httpCode === 200) { dataSource.value = formatResult ? formatResult(data) : data; } } catch (error) { dataSource.value = []; } finally { loading.value = false; } }, }; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-30T06:54:38.000Z"}],["meta",{"property":"article:author","content":"七月的星期七"}],["meta",{"property":"article:tag","content":"hooks"}],["meta",{"property":"article:modified_time","content":"2024-12-30T06:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"use-request\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-30T06:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"七月的星期七\\",\\"url\\":\\"https://github.com/soft-winds\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"返回值","slug":"返回值","link":"#返回值","children":[]}],"git":{"createdTime":1735541678000,"updatedTime":1735541678000,"contributors":[{"name":"刘晓迪","email":"xiaodi195815052@163.com","commits":1}]},"readingTime":{"minutes":1.1,"words":330},"filePathRelative":"vue/hooks/use-request.md","localizedDate":"2024年12月30日","excerpt":"<h2> 介绍</h2>\\n<p><code>use-request</code> 是一个用于处理 HTTP 请求的 Vue 组合式 API。它提供了一种简洁的方式来发起请求、处理响应和错误，并且可以与 Vue 的响应式系统无缝集成。</p>\\n<h2> 代码</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> ref <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"vue\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> request <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"@/utils/request\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">const</span> queryData <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">async</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  url<span class=\\"token punctuation\\">,</span>\\n  method <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"post\\"</span><span class=\\"token punctuation\\">,</span>\\n  data <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  params <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">await</span> request<span class=\\"token punctuation\\">[</span>method<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">(</span>url<span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">,</span> params<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">useReuqest</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">formatResult</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> page <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">pageNo</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">pageSize</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">total</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> dataSource <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> loading <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  page<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">pageNo</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">pageSize</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">total</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  dataSource<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">loading</span><span class=\\"token operator\\">:</span> loading<span class=\\"token punctuation\\">,</span>\\n    dataSource<span class=\\"token punctuation\\">,</span>\\n    page<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">run</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">async</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">filter</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">let</span> filterData <span class=\\"token operator\\">=</span> filter<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>filter<span class=\\"token punctuation\\">.</span>pages<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          page<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>pageNo <span class=\\"token operator\\">=</span> filter<span class=\\"token punctuation\\">.</span>pages<span class=\\"token punctuation\\">.</span>current<span class=\\"token punctuation\\">;</span>\\n          page<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>pageSize <span class=\\"token operator\\">=</span> filter<span class=\\"token punctuation\\">.</span>pages<span class=\\"token punctuation\\">.</span>pageSize<span class=\\"token punctuation\\">;</span>\\n          page<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>total <span class=\\"token operator\\">=</span> filter<span class=\\"token punctuation\\">.</span>pages<span class=\\"token punctuation\\">.</span>total<span class=\\"token punctuation\\">;</span>\\n          filterData <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">...</span>filter<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">...</span>page<span class=\\"token punctuation\\">.</span>value <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        loading<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> httpCode<span class=\\"token punctuation\\">,</span> data <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">queryData</span><span class=\\"token punctuation\\">(</span>filterData<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>httpCode <span class=\\"token operator\\">===</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          dataSource<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> formatResult <span class=\\"token operator\\">?</span> <span class=\\"token function\\">formatResult</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> data<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        dataSource<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">finally</span> <span class=\\"token punctuation\\">{</span>\\n        loading<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
