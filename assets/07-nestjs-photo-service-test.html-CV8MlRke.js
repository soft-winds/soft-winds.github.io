import{_ as i,c as a,d as s,o as e}from"./app-rJXCF2mE.js";const n={};function r(t,l){return e(),a("div",null,l[0]||(l[0]=[s('<h1 id="nestjs-技术要点" tabindex="-1"><a class="header-anchor" href="#nestjs-技术要点"><span>NestJS 技术要点</span></a></h1><h2 id="技术架构" tabindex="-1"><a class="header-anchor" href="#技术架构"><span>技术架构</span></a></h2><h3 id="_1-整体架构" tabindex="-1"><a class="header-anchor" href="#_1-整体架构"><span>1. 整体架构</span></a></h3><ul><li><strong>前端</strong>：Vue 3 + TypeScript + Element Plus</li><li><strong>后端</strong>：NestJS + TypeScript + TypeORM</li><li><strong>数据库</strong>：MySQL + Redis</li><li><strong>文件存储</strong>：本地文件系统</li><li><strong>消息队列</strong>：Bull</li><li><strong>实时通信</strong>：WebSocket</li><li><strong>容器化</strong>：Docker</li><li><strong>CI/CD</strong>：GitHub Actions</li></ul><h3 id="_2-技术选型说明" tabindex="-1"><a class="header-anchor" href="#_2-技术选型说明"><span>2. 技术选型说明</span></a></h3><ul><li><strong>NestJS</strong>：企业级 Node.js 框架，提供完整的 TypeScript 支持</li><li><strong>TypeORM</strong>：强大的 ORM 框架，支持多种数据库</li><li><strong>JWT</strong>：无状态的身份认证方案</li><li><strong>WebSocket</strong>：实现实时通信功能</li><li><strong>Bull</strong>：基于 Redis 的任务队列</li><li><strong>Multer</strong>：文件上传中间件</li><li><strong>Sharp</strong>：高性能图片处理库</li></ul><h2 id="核心功能实现" tabindex="-1"><a class="header-anchor" href="#核心功能实现"><span>核心功能实现</span></a></h2><h3 id="_1-用户认证" tabindex="-1"><a class="header-anchor" href="#_1-用户认证"><span>1. 用户认证</span></a></h3><ul><li>JWT 认证</li><li>角色权限控制</li><li>密码加密存储</li><li>登录状态管理</li></ul><h3 id="_2-文件上传" tabindex="-1"><a class="header-anchor" href="#_2-文件上传"><span>2. 文件上传</span></a></h3><ul><li>文件类型验证</li><li>文件大小限制</li><li>文件名处理</li><li>存储路径管理</li></ul><h3 id="_3-图片处理" tabindex="-1"><a class="header-anchor" href="#_3-图片处理"><span>3. 图片处理</span></a></h3><ul><li>图片压缩</li><li>缩略图生成</li><li>水印添加</li><li>格式转换</li></ul><h3 id="_4-实时通信" tabindex="-1"><a class="header-anchor" href="#_4-实时通信"><span>4. 实时通信</span></a></h3><ul><li>WebSocket 连接管理</li><li>消息推送</li><li>在线状态维护</li><li>房间管理</li></ul><h2 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化"><span>性能优化</span></a></h2><h3 id="_1-数据库优化" tabindex="-1"><a class="header-anchor" href="#_1-数据库优化"><span>1. 数据库优化</span></a></h3><ul><li>索引优化</li><li>查询优化</li><li>连接池配置</li><li>缓存策略</li></ul><h3 id="_2-文件处理" tabindex="-1"><a class="header-anchor" href="#_2-文件处理"><span>2. 文件处理</span></a></h3><ul><li>异步处理</li><li>分片上传</li><li>断点续传</li><li>文件缓存</li></ul><h3 id="_3-缓存策略" tabindex="-1"><a class="header-anchor" href="#_3-缓存策略"><span>3. 缓存策略</span></a></h3><ul><li>Redis 缓存</li><li>内存缓存</li><li>缓存更新策略</li><li>缓存失效处理</li></ul><h3 id="_4-并发处理" tabindex="-1"><a class="header-anchor" href="#_4-并发处理"><span>4. 并发处理</span></a></h3><ul><li>任务队列</li><li>限流控制</li><li>负载均衡</li><li>集群部署</li></ul><h2 id="安全措施" tabindex="-1"><a class="header-anchor" href="#安全措施"><span>安全措施</span></a></h2><h3 id="_1-认证安全" tabindex="-1"><a class="header-anchor" href="#_1-认证安全"><span>1. 认证安全</span></a></h3><ul><li>JWT 加密</li><li>密码加密</li><li>会话管理</li><li>权限控制</li></ul><h3 id="_2-数据安全" tabindex="-1"><a class="header-anchor" href="#_2-数据安全"><span>2. 数据安全</span></a></h3><ul><li>数据加密</li><li>SQL 注入防护</li><li>XSS 防护</li><li>CSRF 防护</li></ul><h3 id="_3-文件安全" tabindex="-1"><a class="header-anchor" href="#_3-文件安全"><span>3. 文件安全</span></a></h3><ul><li>文件类型验证</li><li>文件大小限制</li><li>存储路径安全</li><li>访问权限控制</li></ul><h3 id="_4-接口安全" tabindex="-1"><a class="header-anchor" href="#_4-接口安全"><span>4. 接口安全</span></a></h3><ul><li>接口限流</li><li>参数验证</li><li>错误处理</li><li>日志记录</li></ul><h2 id="开发规范" tabindex="-1"><a class="header-anchor" href="#开发规范"><span>开发规范</span></a></h2><h3 id="_1-代码规范" tabindex="-1"><a class="header-anchor" href="#_1-代码规范"><span>1. 代码规范</span></a></h3><ul><li>TypeScript 规范</li><li>命名规范</li><li>注释规范</li><li>目录结构</li></ul><h3 id="_2-接口规范" tabindex="-1"><a class="header-anchor" href="#_2-接口规范"><span>2. 接口规范</span></a></h3><ul><li>RESTful API 设计</li><li>响应格式统一</li><li>错误码规范</li><li>版本控制</li></ul><h3 id="_3-文档规范" tabindex="-1"><a class="header-anchor" href="#_3-文档规范"><span>3. 文档规范</span></a></h3><ul><li>API 文档</li><li>代码注释</li><li>开发文档</li><li>部署文档</li></ul><h3 id="_4-测试规范" tabindex="-1"><a class="header-anchor" href="#_4-测试规范"><span>4. 测试规范</span></a></h3><ul><li>单元测试</li><li>集成测试</li><li>E2E 测试</li><li>性能测试</li></ul><h2 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步"><span>下一步</span></a></h2><p>在下一篇文章中，我们将介绍：</p><ol><li>项目总结</li><li>技术亮点</li><li>未来规划</li><li>最佳实践</li></ol><p>敬请期待！</p>',46)]))}const o=i(n,[["render",r]]),d=JSON.parse('{"path":"/article/nestjs/nestjs-photo/07-nestjs-photo-service-test.html","title":"NestJS 技术要点","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1746517506000,"contributors":[{"name":"刘晓迪","username":"","email":"xiaodi195815052@163.com","commits":1}],"changelog":[{"hash":"387060f1c8e74c2d52edb7059ed2e0e4928f3fde","time":1746517506000,"email":"xiaodi195815052@163.com","author":"刘晓迪","message":"版本更新v2.0"}]},"filePathRelative":"article/nestjs/nestjs-photo/07-nestjs-photo-service-test.md","readingTime":{"minutes":1.87,"words":560},"excerpt":"\\n<h2>技术架构</h2>\\n<h3>1. 整体架构</h3>\\n<ul>\\n<li><strong>前端</strong>：Vue 3 + TypeScript + Element Plus</li>\\n<li><strong>后端</strong>：NestJS + TypeScript + TypeORM</li>\\n<li><strong>数据库</strong>：MySQL + Redis</li>\\n<li><strong>文件存储</strong>：本地文件系统</li>\\n<li><strong>消息队列</strong>：Bull</li>\\n<li><strong>实时通信</strong>：WebSocket</li>\\n<li><strong>容器化</strong>：Docker</li>\\n<li><strong>CI/CD</strong>：GitHub Actions</li>\\n</ul>"}');export{o as comp,d as data};
