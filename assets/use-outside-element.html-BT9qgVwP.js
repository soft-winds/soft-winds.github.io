const n=JSON.parse('{"key":"v-5c4e7228","path":"/vue/hooks/use-outside-element.html","title":"use-outside-element","lang":"zh-CN","frontmatter":{"title":"use-outside-element","category":["js"],"tag":["hooks"],"description":"介绍 use-outside-element 用于检测鼠标点击是否发生在指定元素之外。它可以帮助你在用户点击元素外部时执行某些操作，例如关闭一个下拉菜单或模态框。 代码 import { onBeforeUnmount, onMounted, type Ref } from \\"vue\\"; // 点击盒子外的元素触发回调函数 const useClickOutSide = (el: Ref&lt;HTMLElement | null&gt;, callback: Function) =&gt; { const handleClickOutside = (e: MouseEvent): void =&gt; { const target = e.target as HTMLElement; if (el.value &amp;&amp; target) { const contain = el.value.contains(target); if (!contain) { callback(); } } }; onMounted(() =&gt; { document.addEventListener(\\"click\\", handleClickOutside); }); onBeforeUnmount(() =&gt; { document.removeEventListener(\\"click\\", handleClickOutside); }); }; export default {useClickOutSide};","head":[["meta",{"property":"og:url","content":"https://soft-winds.github.io/vue/hooks/use-outside-element.html"}],["meta",{"property":"og:site_name","content":"七月的星期七"}],["meta",{"property":"og:title","content":"use-outside-element"}],["meta",{"property":"og:description","content":"介绍 use-outside-element 用于检测鼠标点击是否发生在指定元素之外。它可以帮助你在用户点击元素外部时执行某些操作，例如关闭一个下拉菜单或模态框。 代码 import { onBeforeUnmount, onMounted, type Ref } from \\"vue\\"; // 点击盒子外的元素触发回调函数 const useClickOutSide = (el: Ref&lt;HTMLElement | null&gt;, callback: Function) =&gt; { const handleClickOutside = (e: MouseEvent): void =&gt; { const target = e.target as HTMLElement; if (el.value &amp;&amp; target) { const contain = el.value.contains(target); if (!contain) { callback(); } } }; onMounted(() =&gt; { document.addEventListener(\\"click\\", handleClickOutside); }); onBeforeUnmount(() =&gt; { document.removeEventListener(\\"click\\", handleClickOutside); }); }; export default {useClickOutSide};"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-30T06:54:38.000Z"}],["meta",{"property":"article:author","content":"七月的星期七"}],["meta",{"property":"article:tag","content":"hooks"}],["meta",{"property":"article:modified_time","content":"2024-12-30T06:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"use-outside-element\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-30T06:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"七月的星期七\\",\\"url\\":\\"https://github.com/soft-winds\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]}],"git":{"createdTime":1735541678000,"updatedTime":1735541678000,"contributors":[{"name":"刘晓迪","email":"xiaodi195815052@163.com","commits":1}]},"readingTime":{"minutes":0.66,"words":198},"filePathRelative":"vue/hooks/use-outside-element.md","localizedDate":"2024年12月30日","excerpt":"<h2> 介绍</h2>\\n<p><code>use-outside-element</code> 用于检测鼠标点击是否发生在指定元素之外。它可以帮助你在用户点击元素外部时执行某些操作，例如关闭一个下拉菜单或模态框。</p>\\n<h2> 代码</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> onBeforeUnmount<span class=\\"token punctuation\\">,</span> onMounted<span class=\\"token punctuation\\">,</span> type Ref <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"vue\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 点击盒子外的元素触发回调函数</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">useClickOutSide</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">el</span><span class=\\"token operator\\">:</span> Ref<span class=\\"token operator\\">&lt;</span>HTMLElement <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">null</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">callback</span><span class=\\"token operator\\">:</span> Function</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> handleClickOutside <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>e<span class=\\"token operator\\">:</span> MouseEvent<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token parameter\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> target <span class=\\"token operator\\">=</span> e<span class=\\"token punctuation\\">.</span>target <span class=\\"token keyword\\">as</span> HTMLElement<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>el<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">&amp;&amp;</span> target<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> contain <span class=\\"token operator\\">=</span> el<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">contains</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>contain<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">callback</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">onMounted</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"click\\"</span><span class=\\"token punctuation\\">,</span> handleClickOutside<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">onBeforeUnmount</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"click\\"</span><span class=\\"token punctuation\\">,</span> handleClickOutside<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>useClickOutSide<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
